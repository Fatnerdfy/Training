class Solution {
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) 
    {
        int res = 0;
        int area = 0;
        for(int i = 0; i < grid.size(); i++)
        {
            for(int j = 0; j < grid[0].size(); j++)
            {
                area = findArea(grid, i, j);
                if(area > res)
                {
                    
                    res = area;
                }
            }
        }
        return res;
    }
    int findArea(vector<vector<int>>& grid, int r, int c)
    {
        if(grid[r][c] == 0)
        {
            return 0;
        }else 
        {
            int left = 0;
            int right = 0;
            int up = 0;
            int down = 0;
            
            grid[r][c] = 0;
            
            if((r - 1) >=0)
            {
                left = findArea(grid, r-1, c);
            }
            if((r + 1) < grid.size())
            {
                right = findArea(grid, r+1, c);
            }
            if((c - 1) >=0)
            {
                up = findArea(grid, r, c-1);
            }
            if((c + 1) < grid[0].size())
            {
                down = findArea(grid, r, c+1);
            }
            return 1+left+right+up+down;
        }
        
        
        
    }
    
};

//32ms
//65.88%