/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) 
    {
        vector<double> res;
        vector<int> count;
        average(root, 0, res, count);
        for(int i = 0; i<count.size(); i++)
        {
            res[i] /= count[i];
        }
        return res;
    }
    void average(TreeNode *node, int level, vector<double> &res, vector<int> &count)
    {
        if(node == NULL)
        {
            return;
        }
        if(level<res.size())
        {
            count[level] += 1;
            res[level] += node -> val;
        }else
        {
            count.push_back(1);
            res.push_back(node -> val);
        }
        
        average(node -> left, level+1, res, count);
        average(node -> right, level+1, res, count);
    }
    
};

//19ms
//49.88%