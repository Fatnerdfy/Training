/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int dfs(TreeNode* root, vector<int> nodeVal)
    {
        if(root == NULL)
        {
            return 2147483647;
        }
        int min = 2147483647;
        for(int i = 0; i < nodeVal.size(); i++)
        {
            int temp = abs(nodeVal[i] - root -> val);
            if(min > temp)
            {
                min = temp;
            }
        }
        nodeVal.push_back(root -> val);
        int min1 = dfs(root -> left, nodeVal);
        int min2 = dfs(root -> right, nodeVal);
        
        return min1<min2?(min1<min?min1:min):(min2<min?min2:min);
    }

    int minDiffInBST(TreeNode* root) {
        vector<int> nodeVal;
        return dfs(root, nodeVal);
    }
};

// 5ms
//38.31%
